// Generated by gencpp from file concert_msgs/AllocateSoftware.msg
// DO NOT EDIT!


#ifndef CONCERT_MSGS_MESSAGE_ALLOCATESOFTWARE_H
#define CONCERT_MSGS_MESSAGE_ALLOCATESOFTWARE_H

#include <ros/service_traits.h>


#include <concert_msgs/AllocateSoftwareRequest.h>
#include <concert_msgs/AllocateSoftwareResponse.h>


namespace concert_msgs
{

struct AllocateSoftware
{

typedef AllocateSoftwareRequest Request;
typedef AllocateSoftwareResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AllocateSoftware
} // namespace concert_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::concert_msgs::AllocateSoftware > {
  static const char* value()
  {
    return "9a9d4cc73086cbcea67798fb6b0cda56";
  }

  static const char* value(const ::concert_msgs::AllocateSoftware&) { return value(); }
};

template<>
struct DataType< ::concert_msgs::AllocateSoftware > {
  static const char* value()
  {
    return "concert_msgs/AllocateSoftware";
  }

  static const char* value(const ::concert_msgs::AllocateSoftware&) { return value(); }
};


// service_traits::MD5Sum< ::concert_msgs::AllocateSoftwareRequest> should match 
// service_traits::MD5Sum< ::concert_msgs::AllocateSoftware > 
template<>
struct MD5Sum< ::concert_msgs::AllocateSoftwareRequest>
{
  static const char* value()
  {
    return MD5Sum< ::concert_msgs::AllocateSoftware >::value();
  }
  static const char* value(const ::concert_msgs::AllocateSoftwareRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::concert_msgs::AllocateSoftwareRequest> should match 
// service_traits::DataType< ::concert_msgs::AllocateSoftware > 
template<>
struct DataType< ::concert_msgs::AllocateSoftwareRequest>
{
  static const char* value()
  {
    return DataType< ::concert_msgs::AllocateSoftware >::value();
  }
  static const char* value(const ::concert_msgs::AllocateSoftwareRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::concert_msgs::AllocateSoftwareResponse> should match 
// service_traits::MD5Sum< ::concert_msgs::AllocateSoftware > 
template<>
struct MD5Sum< ::concert_msgs::AllocateSoftwareResponse>
{
  static const char* value()
  {
    return MD5Sum< ::concert_msgs::AllocateSoftware >::value();
  }
  static const char* value(const ::concert_msgs::AllocateSoftwareResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::concert_msgs::AllocateSoftwareResponse> should match 
// service_traits::DataType< ::concert_msgs::AllocateSoftware > 
template<>
struct DataType< ::concert_msgs::AllocateSoftwareResponse>
{
  static const char* value()
  {
    return DataType< ::concert_msgs::AllocateSoftware >::value();
  }
  static const char* value(const ::concert_msgs::AllocateSoftwareResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONCERT_MSGS_MESSAGE_ALLOCATESOFTWARE_H
